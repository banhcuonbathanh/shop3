# version: "3.8"

services:
  # -------------------------------  postgress -----------------------
  postgres:
    build:
      context: ./1.1.postgres
      dockerfile: Dockerfile
    container_name: shop-postgres
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
        # -------------------------------  golang -------------------------------
  go_app:
    build:
      context: ./2.2.golang
      dockerfile: Dockerfile
      args:
        HOST: host-in-docker-compose

    container_name: shop-golang
    volumes:
      - ./2.2.golang:/go/src/2.2.golang
    ports:
      - "8888:8888"
    networks:
      - app-network
    depends_on:
      - postgres

    environment:
      DB_HOST: postgres
      # -------------------------------  nextjs -------------------------------
  next-app:
    container_name: next-app1
    build:
      context: ./nextjs
      dockerfile: Dockerfile
      #args:
      #  DB_HOST: http://shop-golang:8888
    environment:
      - NETX_PUBLIC_DB_HOST=http://shop-golang:8888
    command:
      - /bin/sh
      - -c
      - |
        npm run build
        npm start
    networks:
      - app-network
    depends_on:
      - go_app
    ports:
      - "3000:3000"
    #environment:
    #  NEXT_PUBLIC_DB_HOST:
    #    environment-nextapp

    # -------------------------------  admin -------------------------------
  admin-app:
    container_name: next-app-admin
    build:
      context: ./admin
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_DB_HOST=http://shop-golang:8888

    environment:
      - NEXT_PUBLIC_DB_HOST=http://shop-golang:8888
    command:
      - /bin/sh
      - -c
      - |
        npm run build
        npm start
    networks:
      - app-network
    depends_on:
      - go_app
    ports:
      - "3001:3001"

    # -------------------------------  nginx -------------------------------
  nginx:
    build:
      context: ./4.nginx/
    container_name: nginx_reverse_proxy
    ports:
      - "80:80"
    volumes:
      - ./4.nginx/config/nginx/default.conf:/etc/nginx/conf.d/default.conf
      # - ./nextjs/.next:/usr/share/nginx/html

      # - ./4.nginx/logs/access.log:/var/log/nginx/access.log
    networks:
      - app-network

    depends_on:
      - admin-app
    # -------------------------------   -------------------------------

networks:
  app-network:
    driver: bridge
volumes:
  postgres-data:

  # build: a -> b -> c -> start: a - b - c
  # commit - nextjs -> clone -> build image /push -> pull -> run
  # commut - shop-golang -> .....
  #
  #
  #

  # - /bin/sh
  #   - -c
  #   - |
  #     npm run build
  #     npm start
